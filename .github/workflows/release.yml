name: release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross

      - run: |
          mkdir -p dist
          echo "${{ steps.get_tag.outputs.tag }}" > dist/VERSION.txt

      - name: build x86_64
        run: |
          cross build --release --target x86_64-unknown-linux-gnu
          cp target/x86_64-unknown-linux-gnu/release/wghttp dist/wghttp
          tar -czvf wghttp-x86_64.tar.gz -C dist wghttp VERSION.txt
          rm -v dist/wghttp

      - name: build aarch64
        run: |
          cross build --release --target aarch64-unknown-linux-gnu
          cp target/aarch64-unknown-linux-gnu/release/wghttp dist/wghttp
          tar -czvf wghttp-aarch64.tar.gz -C dist wghttp VERSION.txt
          rm -v dist/wghttp

      - name: build armv7
        run: |
          cross build --release --target armv7-unknown-linux-gnueabihf
          cp target/armv7-unknown-linux-gnueabihf/release/wghttp dist/wghttp
          tar -czvf wghttp-armv7.tar.gz -C dist wghttp VERSION.txt
          rm -v dist/wghttp

      - name: github release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.get_tag.outputs.tag }}
          tag_name: ${{ steps.get_tag.outputs.tag }}
          files: |
            wghttp-x86_64.tar.gz
            wghttp-aarch64.tar.gz
            wghttp-armv7.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
